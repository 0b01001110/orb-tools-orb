description: >
  Uses the CLI to promote a dev version of an orb to the registry. 
  This command supports Semantic Versioning support. In order to promote
  the commit subject must include the `[semver:FOO]` pattern.
  i.e. 'Merge pull request #XX from some-branch [semver:minor]' 

parameters:
  orb-ref:
    description: "A fully-qualified reference to a *development* orb. This takes the form <namespace>/<orb-name>@dev:<label>"
    type: string

  token-variable:
    description: >
      Name of env var containing your token. Pass this as a raw string such
      as ORB_PUBLISHING_TOKEN. Do not paste the actual token into your
      configuration. If omitted it's assumed the CLI has already been setup
      with a valid token.
    type: env_var_name
    default: CIRCLE_TOKEN


  add-pr-comment:
    description: >
      CircleCI can comment on the merged PR with the final production version. 
      If you want contributors to see a message with the production version, 
      please provide the username & token, and ensure the merge commit subject
      includes the PR number in default format.
      i.e. 'Merge pull request #XX from some-branch [semver:patch]' 
    type: boolean

  bot-user:
    description: >
      The GitHub user to post PR comment.
    type: string
    default: ""

  bot-token:
    description: >
      The GitHub user's token to post PR comment.
    type: string
    default: ""

steps:
      - run:
          name: Grab Commit Info
          command: |
            curl "https://circleci.com/api/v1.1/project/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BUILD_NUM}?circle-token=<< parameters.token-variable >>" > /tmp/build_info.txt            
      - run:
          name: Promote to prod
          command: |
            SEMVER_INCREMENT=`jq -r '.subject' /tmp/build_info.txt | sed -En 's/.*\[semver:(major|minor|patch)\].*/\1/p'`
            if [ -z ${SEMVER_INCREMENT} ];then
              echo "Merge commit did not indicate which SemVer increment to make. Please ammend commit with [semver:FOO] where FOO is major, minor, or patch"
              exit 1
            fi
            PUBLISH_MESSAGE=`circleci orb publish promote <<parameters.orb-ref>> ${SEMVER_INCREMENT} --token << parameters.token-variable >>`
            echo $PUBLISH_MESSAGE
            ORB_VERSION=$(echo $PUBLISH_MESSAGE | sed -n 's/Orb .* was promoted to `\(.*\)`.*/\1/p')
            echo "export ORB_VERSION=\"${ORB_VERSION}\"" >> $BASH_ENV
      - when:
          conditions: <<parameters.add-pr-comment>>
            run:
          name: Publish Prod version to PR
          command: |
            PR_NUMBER=`jq -r '.subject' /tmp/build_info.txt | sed -n 's/Merge pull request #\([0-9]*\) from.*/\1/p'`
            echo "PR_NUMBER is ${PR_NUMBER}"
            if [ "$PR_NUMBER" == "" ];then
              echo "No pr found, do nothing. If this is a mistake, be sure your commit subject includes the pattern:"
              echo "\tMerge pull request #XX from some-branch [semver:patch]"
              exit 0
            fi
            curl -X POST -u "<<parameters.bot-user>>:<<parameters.bot-token>>" "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/issues/${PR_NUMBER}/comments" -d "{\"body\":\"*Production* version of orb available for use - \`${ORB_VERSION}\`\"}"
