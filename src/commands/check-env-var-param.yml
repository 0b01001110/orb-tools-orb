description: >
  Check that an env-var parameter is defined, produce an error otherwise

parameters:
  param:
    type: env_var_name
    description: Name of the environment variable to check

  error-message:
    type: string
    default: ""
    description: >
      Optional custom message to print if parameter is undefined. A
      standard message describing the missing environment variable
      which produced the error is always printed, but this can be used
      to pass a custom string to provide more specific information.

  exit-if-undefined:
    type: boolean
    default: true
    description: >
      Should a job automatically fail if the given parameter is not defined?

steps:
  - run:
      name: Checking if $<<parameters.param>> is defined...
      command: |
        if [[ -z "${<<parameters.param>>}" ]]; then
          echo "ERROR: Missing environment variable <<parameters.param>>" >&2
          if [[ -n "<<parameters.error-message>>" ]]; then
            echo "<<parameters.error-message>>" >&2
          fi
          <<#parameters.exit-if-undefined>>exit 1<</parameters.exit-if-undefined>>
        else
          echo "Yes, <<parameters.param>> is defined!"
        fi
